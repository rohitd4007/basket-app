{"version":3,"sources":["Redux/Constants/action-type.js","Redux/Reducers/productReducers.js","Redux/Reducers/index.js","Redux/store.js","Components/Items.jsx","App.js","index.js"],"names":["ActionTypes","initialState","producrs","id","title","Category","reducers","combineReducers","allproducts","state","action","type","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Items","params","useState","cartitem","setCartItem","React","counters","setCounters","setCounter","index","newCounter","newCounters","Object","assign","setCount","className","ItemsData","map","items","onClick","item","getItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"idAAaA,EACK,eCCZC,EAAe,CACjBC,SAAU,CAAC,CACPC,GAAI,EACJC,MAAO,OACPC,SAAU,SCEHC,EAJEC,YAAgB,CAC7BC,YDK0B,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACpDC,EAAkBD,EAAlBC,KAAkBD,EAAZE,QACd,OAAQD,GACJ,KAAKX,EAEL,QACI,OAAOS,MEPJI,EANDC,YACZR,EACA,GACAS,OAAOC,8BAAgCD,OAAOC,gC,oDCwDjCC,EA1DD,SAACC,GACb,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCC,IAAMH,SAAS,CAAC,EAAG,EAAG,EAAG,IAAzD,mBAAOI,EAAP,KAAiBC,EAAjB,KASMC,EAAa,SAACC,EAAOC,GACzB,IAAMC,EAAcC,OAAOC,OAAO,GAAIP,GACtCK,EAAYF,GAASC,EAVN,SAACD,EAAOC,GACvB,IAAMC,EAAcC,OAAOC,OAAO,GAAIP,GACtCK,EAAYF,GAASC,EACrBH,EAAYI,GAQZG,CAASH,IAEX,OACE,mCACE,sBAAKI,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAf,SACGC,EAAUC,KAAI,SAACC,EAAOT,GAAR,OACb,sBAAiBM,UAAU,QAA3B,UACE,qBAAKA,UAAU,eAAf,SACE,wBACEI,QAAS,YAhBT,SAACD,GACfd,EAAY,GAAD,mBAAKD,GAAL,CAAee,EAAME,QAgBhBC,CAAQH,GACRV,EAAWC,EAAOS,IAHtB,iBASF,qBAAKH,UAAU,YAAf,SAA4BG,EAAME,SAX1BX,QAed,qBAAKM,UAAU,sBAAf,SACGZ,EAASc,KAAI,SAACd,EAAUM,GAAX,OACZ,sBAAKM,UAAU,aAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,wBACEI,QAAS,WACPX,EAAWC,EAAOH,EAAW,IAFjC,iBAQF,sBAAKS,UAAU,iBAAf,cAAkCZ,KAClC,qBAAKY,UAAU,aAAf,SAA6BT,MAXEG,cC9B9Ba,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCANQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU7B,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ8B,SAASC,eAAe,W","file":"static/js/main.fd332ca0.chunk.js","sourcesContent":["export const ActionTypes = {\r\n    SET_PRODUCTS: \"SET_PRODUCTS\",\r\n    SELECTED_PRODUCT: \"SELECTED_PRODUCT\",\r\n    REMOVE_SELECTED_PRODUCT: \"REMOVE_SELECTED_PRODUCT\",\r\n}","import { ActionTypes } from \"../Constants/action-type\";\r\n\r\nconst initialState = {\r\n    producrs: [{\r\n        id: 1,\r\n        title: \"food\",\r\n        Category: \"veg\"\r\n    }]\r\n}\r\n\r\nexport const productReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.SET_PRODUCTS:\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\nimport { productReducer } from \"./productReducers\"\r\n\r\n\r\nconst reducers = combineReducers({\r\n    allproducts: productReducer\r\n})\r\n\r\nexport default reducers;","import { createStore } from \"redux\";\r\nimport reducers from \"./Reducers/index\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ItemsData from \"../Helper/Items.json\";\r\nimport \"./Items.css\";\r\n\r\nconst Items = (params) => {\r\n  const [cartitem, setCartItem] = useState([]);\r\n  const [counters, setCounters] = React.useState([0, 0, 0, 0]);\r\n  const setCount = (index, newCounter) => {\r\n    const newCounters = Object.assign([], counters);\r\n    newCounters[index] = newCounter;\r\n    setCounters(newCounters);\r\n  };\r\n  const getItem = (items) => {\r\n    setCartItem([...cartitem, items.item]);\r\n  };\r\n  const setCounter = (index, newCounter) => {\r\n    const newCounters = Object.assign([], counters);\r\n    newCounters[index] = newCounter;\r\n    setCount(newCounters);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-container\">\r\n        <div className=\"items-container\">\r\n          {ItemsData.map((items, index) => (\r\n            <div key={index} className=\"items\">\r\n              <div className=\"add-item-btn\">\r\n                <button\r\n                  onClick={() => {\r\n                    getItem(items, index);\r\n                    setCounter(index, items);\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </div>\r\n              <div className=\"item-name\">{items.item}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"cart-item-container\">\r\n          {cartitem.map((cartitem, index) => (\r\n            <div className=\"cart-items\" key={index}>\r\n              <div className=\"cart-item-btn\">\r\n                <button\r\n                  onClick={() => {\r\n                    setCounter(index, counters + 1);\r\n                  }}\r\n                >\r\n                  -\r\n                </button>\r\n              </div>\r\n              <div className=\"cart-item-name\"> {cartitem}</div>\r\n              <div className=\"item-count\">{counters}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Items from \"./Components/Items\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Items></Items>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}